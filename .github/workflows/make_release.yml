name: Make release on "VERSION" file change @ main

on:
  push:
    branches: [ main ]
    paths:
      - 'VERSION'

jobs:
  checks_and_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2
        with:
          python-version: 3.11
      - name: Install packages
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .
      - name: Run CI
        run: |
          make check PYTHON=python3
          make tests PYTHON=python3
  

  build_windows:
    needs: checks_and_tests
    runs-on: windows-latest
    defaults:
      run:
        shell: cmd
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2
        with:
          python-version: 3.11
      - name: Install packages
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .
      - run: choco install make
      - name: Build Binary
        run: |
          make build_windows PYINSTALLER=pyinstaller
      - name: Upload Binary
        uses: actions/upload-artifact@v2
        with:
          name: windows.zip
          path: dist/windows.zip


  build_linux:
    needs: checks_and_tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2
        with:
          python-version: 3.11
      - name: Install packages
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .
      - name: Build Binary
        run: |
          make build_linux_macos PYINSTALLER=pyinstaller
      - name: Upload Binary
        uses: actions/upload-artifact@v2
        with:
          name: linux.tar.gz
          path: dist/linux_macos.tar.gz

  build_macos:
    needs: checks_and_tests
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2
        with:
          python-version: 3.11
      - name: Install packages
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .
      - name: Build Binary
        run: |
          make build_linux_macos PYINSTALLER=pyinstaller
      - name: Upload Binary
        uses: actions/upload-artifact@v2
        with:
          name: macos.tar.gz
          path: dist/linux_macos.tar.gz

  release:
    needs:
      - build_windows
      - build_macos
      - build_linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: get_version
        run: echo "::set-output name=version::$(cat VERSION)"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false

      - name: Download Windows Binary
        uses: actions/download-artifact@v2
        with:
          name: windows.zip
      - name: Upload Windows Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: windows.zip
          asset_name: birthday-reminder-windows-v${{ steps.get_version.outputs.version }}.zip
          asset_content_type: application/zip

      - name: Download MacOS Binary
        uses: actions/download-artifact@v2
        with:
          name: macos.tar.gz
      - name: Upload MacOS Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: macos.tar.gz
          asset_name: birthday-reminder-macOS-v${{ steps.get_version.outputs.version }}.tar.gz
          asset_content_type: application/gzip

      - name: Download Linux Binary
        uses: actions/download-artifact@v2
        with:
          name: linux.tar.gz
      - name: Upload Linux Binary
        id: upload_release_asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: linux.tar.gz
          asset_name: birthday-reminder-linux-v${{ steps.get_version.outputs.version }}.tar.gz
          asset_content_type: application/gzip
